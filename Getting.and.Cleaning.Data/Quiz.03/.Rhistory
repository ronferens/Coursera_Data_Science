debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
getwd()
setwd('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project')
getwd()
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
data <- read.table(unz(temp, "a1.dat"))
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
data <- read.table(unz(temp, "a1.dat"))
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
unlink(temp)
}
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
#   data <- read.table(unz(temp, "a1.dat"))
#   unlink(temp)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
url <- "https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip"
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
dataSetDir <- paste(destDir, sep="/", UCI HAR Dataset)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
training <- read.table(path)
path <- paste(dataSetDir, sep="/", "train/X_train.txt")
training <- read.table(path)
header(training)
head(training)
head(training, n=3)
head(training, n=1)
trainingSet <- paste(dataSetDir, sep="/", "train/X_train.txt") %>% read.table(path)
path <- sptintf("%s/%s/X_%s.txt", dataSetDir, subDir)
path <- sprintf("%s/%s/X_%s.txt", dataSetDir, subDir)
subDir <-"train"
path <- sprintf("%s/%s/X_%s.txt", dataSetDir, subDir)
path <- sprintf("%s/%s/X_%s.txt", dataSetDir, subDir, subDir)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
if(!file.exists(destDir)) {
.
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
destZipFile <-paste(destDir, sep="/", "dataset.zip")
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
data <- rbind(trainSet, testSet)
names(data)
is.na(names(data))
sum(is.na(names(data)))
tmp <- tapply(data, mean)
features <- read.table(sprintf("%s/features.txt", dataSetDir))
indx <- subset(features, grepl("mean()", features[,2]) | grepl("std()", features[,2]))
View(indx)
View(indx)
names(features)
indx
names(index)
names(indx)
indx$V1
features$V1
meanAndStdkeys <- paste0("V", meanAndStdIndexs)
meanAndStdkeys <- paste0("V", indx)
meanAndStdkeys
meanAndStdkeys <- apply(paste0("V", indx))
meanAndStdkeys <- apply(indx, paste0("V", indx))
meanAndStdkeys <- tapply(indx, paste0("V", indx))
meanAndStdkeys <- meanAndStdIndexs[,past0("V", meanAndStdIndexs$V1)]
meanAndStdkeys <- indx[,past0("V", indx$V1)]
meanAndStdkeys <- indx[,paste0("V", indx$V1)]
indx$V1
paste0("V", indx$V1)
data <- completeData[,meanAndStdkeys]
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
names(completeData)
daat$V1
data$V1
names(data)
names(completeData)
names(completeData)[-1]
a<-names(completeData)
a(-1)
a[-1]
a[length(a)]
names(completeData)[lenght(completeData)] <- "activities"
names(completeData)[length(completeData)] <- "activities"
names(completeData)
completeData$activities
summary(completeData$activities)
sum(completeData$activities)
head(completeData$activities)
a<-completeData$activities
a<-activityNames[completeData$activities]
activityNames <- read.table(sprintf("%s/activity_labels.txt", dataSetDir))
activityNames
a<-activityNames[completeData$activities]
A,-completeData$activities
A<-completeData$activities
A
A[1]
activityNames[A[1]
]
activityNames[A[1]]
activityNames(A[1])
activityNames[5]
activityNames[,5]
activityNames
activityNames$V2[A[1]]
activityNames$V2[completeData$activities]
a<-activityNames$V2[completeData$activities]
a
summary(a
)
activityNames <- read.table(sprintf("%s/activity_labels.txt", dataSetDir))
summary(completeData$activities)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
names(completeData)[length(completeData)] <- "activities"
summary(completeData$activities)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
summary(completeData$activities)
features$V1
features$V2
features$V2[meanAndStdSubset$V1]
View(meanAndStdSubset)
View(meanAndStdSubset)
View(meanAndStdIndexs)
View(meanAndStdIndexs)
data<-setNames(meanAndStdNames)
setNames(data, meanAndStdNames)
names(dat)
names(data)
meanAndStdNames
meanAndStdNames <- meanAndStdSubset$V2
setNames(data, meanAndStdNames)
names(data)
names(data)<-meanAndStdNames
names(data)
View(meanAndStdIndexs)
data <- cbind(data, completeData$activities)
names(data)<-meanAndStdNames
names(data)
meanAndStdNames <- c(meanAndStdSubsetmeanAndStdNames, "activities")
meanAndStdNames <- c(meanAndStdNames, "activities")
names(data)<-meanAndStdNames
names(data)
meanAndStdNames
meanAndStdNames <- meanAndStdSubset$V2
meanAndStdNames
meanAndStdNames <- c(meanAndStdNames, "activities")
names(data)<-meanAndStdNames
names(data)
meanAndStdNames
meanAndStdNames <- meanAndStdSubset$V2
meanAndStdNames
meanAndStdNames <- cbind(meanAndStdNames, "activities")
meanAndStdNames
meanAndStdNames <- meanAndStdSubset$V2
meanAndStdNames <- c(meanAndStdSubset$V2, "activities")
meanAndStdNames
meanAndStdSubset$V2
meanAndStdNames <- meanAndStdSubset$V2
meanAndStdNames <- append(meanAndStdNames, "activities")
meanAndStdNames <- meanAndStdSubset$V2
meanAndStdNames <- append(meanAndStdNames, "activities")
class(meanAndStdSubset$V2)
meanAndStdNames <- meanAndStdSubset$V2
meanAndStdNames <- factor(append(as.character(meanAndStdNames),"activities"))
meanAndStdNames
names(data)<-meanAndStdNames
names(data)
meanAndStdNames <- meanAndStdSubset$V2
meanAndStdNames <- factor(append(as.character(meanAndStdNames), c("subjects", "activity_name"))
)
meanAndStdNames
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
dataSet <- cbind(set, subjects, labels)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
names(subjects)
setNames(subjects, "subjects")
names(subjects)
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
names(subjects)
names(subjects)
names(labels)
names(labels)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
View(meanAndStdSubset)
meanAndStdkeys
meanAndStdNames
meanAndStdNames
data$activities
names(data)
completeData$activities
names(data)
names(completeData)
A<-completeData$activities
names(A)
A
names(A)
A<- completeData[,meanAndStdkeys]
A<- cbind(A, completeData$subjects, completeData$activities)
names(A)
names(completeData)
names(A)
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
names(data)
names(data)
dataNames
append(dataNames, c("subjects", "activities"))
dataNames
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
names(data)
meanAndStdNames
summary(data$activities)
names(data)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
summary(data$activitiesvities)
data$activities
summary(data$activities)
unique(data$activities)
A <- data$activities
subjectNames <- unique(data$subjects)
subjectNames
subjectNames <- sort(unique(data$subjects))
subjectNames
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
subjectNames
activity
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
unique(activityNames)
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
View(tmpData)
View(tmpData)
A <- tapply(tmpData, mean)
A <- apply(tmpData, mean)
A <- apply(tmpData, 2, mean)
A <- apply(tmpData, 2, mean)
A <- colMeans(tmpData)
A <- colMeans(tmpData[1:79])
A <- apply(tmpData[1:79], 2, mean)
A
meanValues <- apply(tmpData[1:length(tmpData - 2)]), 2, mean)
meanValues <- apply(tmpData[1:length(tmpData - 2)]), 2, mean))
meanValues <- apply(tmpData[1:length(tmpData - 2)], 2, mean))
meanValues <- apply(tmpData[1:length(tmpData - 2)], 2, mean)
length(tmpData - 2)
length(tmpData)-2
meanValues <- apply(tmpData[1:(length(tmpData)-2)], 2, mean)
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
length(subjects) * length(activities)
View(newData)
View(newData)
c(meanValues, subject, activity)
newData(indx, ) <- c(meanValues, subject, activity)
newData[indx, ] <- c(meanValues, subject, activity)
newData <- data.frame(nrow = (length(subjects) * length(activities)), ncol=ncol(data))
ncol(data)
(length(subjects) * length(activities))
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
View(newData)
View(newData)
names(newData) <- names(data)
View(newData)
View(newData)
write.table(newData, file="tidyData.txt", row.names=FALSE)
getwd()
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Project/run_analysis.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
households <- data[data$ACR == 3]
households <- data[,data$ACR == 3]
households <- data[data$ACR == 3,]
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
ans <- which(agricultureLogical)
View(agricultureLogical)
View(agricultureLogical)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
agricultureLogical
householdsAcrLogical$AGS == 6
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
ans <- which(agricultureLogical, na.omit=TRUE)
agricultureLogical <- which(householdsAcrLogical$AGS == 6)
agricultureLogical
ans <- which(agricultureLogical)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
agricultureLogical
install.packages("jpeg")
library(jpeg)
jpgImg <- readJPEG("getdata-jeff.jpg", native = TRUE)
summary(jpgImg[30,])
quantile(jpgImg, probs = c(0.3, 0.8))
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/ref.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/ref.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
View(educationalData)
View(educationalData)
View(productData)
View(productData)
View(educationalData)
View(educationalData)
matchedID <- productData$X == educationalData$CountryCode
data <- merge(productData, educationalData, by.x=productData$X, by.yeducationalData$CountryCode, all=TRUE)
data <- merge(productData, educationalData, by.x=productData$X, by.y=educationalData$CountryCode, all=TRUE)
data <- inter(productData, educationalData, by.x=productData$X, all=TRUE)
data <- merge(productData, educationalData, by.x=productData$X, all=TRUE)
data <- merge(productData, educationalData, by.x="X", all=TRUE)
names(productData)
names(educationalData)
data <- merge(productData, educationalData, by.x="X", by.y = "CountryCode", all=TRUE)
View(data)
View(productData)
View(educationalData)
View(productData)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.03/Quiz_03.R')
data <- merge(productData, educationalData, by.x="X", by.y = "CountryCode", sort=TRUE)
View(productData)
data <- merge(productData, educationalData, by.x = "V1", by.y = "CountryCode", sort=TRUE)
View(data)
data[with(data, order(-V2))]
data[with(data, order(-V2)),]
data <- data[with(data, order(-V2)),]data[with(data, order(-V2)),]
data <- data[with(data, order(-V2)),]
View(data)
View(data)
View(data)
View(data)
data$mean(data[data$Income.Group=='High income: OECD',]$V2)
mean(data[data$Income.Group=='High income: OECD',]$V2)
mean(data[data$Income.Group=='High income: nonOECD',]$V2)
seq=(0,1,5)
seq(0,1,length.out = 5)
seq(0.2,0.8,length.out = 5)
seq(0.2,1.0,length.out = 5)
quantileVals <- quantile(combined$V2, seq(0.2,1.0,length.out = 5))
quantileVals <- quantile(data$V2, seq(0.2,1.0,length.out = 5))
q1 <- data$V2 <= 38
xtabs(q1 ~ data$Income.Group)
