help avrg
help avr
help help
help cor
help cov
help mean
help mean
help.start
help.start()
help(var)
example(mean)
res <- 7 +9
res
x <- 1:5
y <- 2^x
y
x
help(ls)
ls()
help(rm)
rm(xm)
rm
rm()
rm(all)
clear()
rm(ls())
rm(list=ls())
help(is
)
help(factor)
library("ggplot2", lib.loc="~/R/win-library/3.1")
install.packages("ggplot2")
clear
clc
c
install.packages("KernSmooth")
library(KernSmooth)
install.packages("httpuv")
install.packages("Rcpp")
list(output[[4]]$name, output[[4]]$created_at)
source('~/.active-rstudio-document')
list(output[[4]]$name, output[[4]]$created_at)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
stop_for_status(req)
output <- content(req)
list(output[[4]]$name, output[[4]]$created_at)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02.R')
list(output[[4]]$name, output[[4]]$created_at)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02.R')
# stop_for_status(req)
# output <- content(req)
# list(output[[4]]$name, output[[4]]$created_at)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02.R')
# request the webpage from the URL
names(a)
a
a$"jtleek/datasharing"
a[[5]]
a[[5]]$created_at
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02.R')
b <- json2[which(json1$name == "datasharing"),]$created_at
json2[which(json1$name == "datasharing"),]$created_at
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02.R')
b <- json2[which(json1$name == "jtleek/datasharing"),]$created_at
json2[which(json1$name == "jtleek/datasharing"),]$created_at
json1$name
ab <- json2[which(a == "jtleek/datasharing"),]$created_at
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02.R')
ans <- json2[which(json2$full_name == "jtleek/datasharing"),]$created_at
install.packages("sqldf")
library(sqldf)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
localFile <- file.path(getwd(), "ss06pid.csv")
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
names(acs)
getwd()
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
names(acs)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
ans <- sqldf("select pwgtp1 from acs where AGEP < 50")
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q02.R')
c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q04.R')
ans <- c(nchar(htmlCode[10]), nchar(htmlCode[20]), nchar(htmlCode[30]), nchar(htmlCode[100]))
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q05.R')
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q05.R')
forCode[[4]]
summary(forCode)
names(forCode)
forCode[[1]]
forCode[1
]
forCode
forCode[1258]
a< - forCode[1258]
a<- forCode[1258]
a[1:10]
a
subset(a, 1, 10)
substr(a, 1, 10)
substr(a, 1, 150)
substr(a, 1, 50)
substr(a, 1, 30)
substr(a, 1, 32)
substr(a, 28, 32)
substr(a, 29, 32)
num <- as.numeric(substr(a, 29, 32))
size(forCode)
dmis(forCode)
dims(forCode)
length(forCode)
length(a)
forCode[1]
tmp <- forCode[1]
length(tmp)
nchar(tmp)
lineSize <- nchar(forCode[1])
numOfLines <- nchar(forCode) / lineSize
nchar(forCode) / lineSize
nchar(forCode)
a <- nchar(forCode)
nchar(forCode[1])
nchar(forCode[2])
nchar(forCode[3])
nchar(forCode[1000])
nchar(forCode[-1])
nchar(forCode[-1L])
max(nchar(forCode[-1L]))
forCode[-1L]
a <- forCode
length(a)
numOfLines <- length(forCode) / lineSize
# con <- url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for")
# forCode <- readLines(con)
# close(con)
sum
sum
}
num <- as.numeric(substr(forCode[i], 29, 32))
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q05.R')
debugSource('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q05.R')
is.na.numeric_version(num)
is.na.numeric_version(sumVal)
is.na(sumVal)
source('C:/Users/rferens/Git/datasciencecoursera/Getting.and.Cleaning.Data/Quiz.02/Quiz02_q05.R')
